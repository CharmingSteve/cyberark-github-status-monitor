name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.0
          cli_config_migrate: true

      - name: Verify Terraform Version
        run: terraform version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          cd terraform
          terraform plan \
            -var="slack_api_token=${{ secrets.SLACK_API_TOKEN }}" \
            -var="slack_webhook_url=${{ secrets.SLACK_WEBHOOK_URL }}" \
            -var="statuscake_api_key=${{ secrets.STATUSCAKE_API_KEY }}" \
            -out=tfplan
          echo "::set-output name=stdout::$($(cat tfplan))"

      - name: Save Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          cd terraform
          terraform apply -auto-approve tfplan \
            -var="slack_api_token=${{ secrets.SLACK_API_TOKEN }}" \
            -var="slack_webhook_url=${{ secrets.SLACK_WEBHOOK_URL }}" \
            -var="statuscake_api_key=${{ secrets.STATUSCAKE_API_KEY }}"
